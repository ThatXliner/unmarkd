name: CI


on: [push, pull_request]
jobs:
  "pytest-Ubuntu":
    strategy:
      matrix:
        python-version:  # 3.8 to 3.9
         - "3.9.0"
         - "3.8.5"
         - "3.8.4"
         - "3.8.3"
         - "3.8.2"
         - "3.8.1"
         - "3.8.0"
         - "3.6"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install dependencies
        run: python3 -m pip install poetry
          poetry install
      - name: Test with pytest
        run: poetry run pytest -vvv --cov=unmarkd --cov-report=xml
      - name: Now, install extras
        run: poetry install -E "all"
      - name: And test it again
        run: poetry run pytest -vvv --cov=unmarkd --cov-report=xml
      - name: Upload to codecov
        run: curl -s https://codecov.io/bash | bash
  "pytest-MacOS":
    strategy:
      matrix:
        python-version:  # 3.8 to 3.9
         - "3.9.0"
         - "3.8.5"
         - "3.8.4"
         - "3.8.3"
         - "3.8.2"
         - "3.8.1"
         - "3.8.0"
         - "3.6"
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install dependencies
        run: |
         python3 -m pip install poetry
         poetry install
      - name: Test with pytest
        run: poetry run pytest -vvv --cov=unmarkd --cov-report=xml
      - name: Now, install extras
        run: poetry install -E "all"
      - name: And test it again
        run: poetry run pytest -vvv --cov=unmarkd --cov-report=xml
      - name: Upload to codecov
        run: curl -s https://codecov.io/bash | bash
  "pytest-Windows":
    strategy:
      matrix:
        python-version:  # 3.8 to 3.9
         - "3.9.0"
         - "3.8.3"
         - "3.8.2"
         - "3.8.1"
         - "3.8.0"
         - "3.6"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install poetry
          python -m poetry install
      - name: Test with pytest
        run: python -m poetry run pytest -vvv --cov=unmarkd --cov-report=xml
      - name: Now, install extras
        run: poetry install -E "all"
      - name: And test it again
        run: python -m poetry run pytest -vvv --cov=unmarkd --cov-report=xml
      - name: Upload to codecov
        run: curl -s https://codecov.io/bash | bash
  build:
    needs:
        - "pytest-Ubuntu"
        - "pytest-Windows"
        - "pytest-MacOS"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9.0
        uses: actions/setup-python@v2
        with:
          python-version: "3.9.0"
      - name: Install dependencies
        run: python -m pip install poetry
      - name: Poetry check
        run: poetry check
      - name: Poetry build
        run: poetry build
  lint:
    needs: build
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9.0
        uses: actions/setup-python@v2
        with:
          python-version: "3.9.0"
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install
      - name: Lint with Isort
        run: poetry run isort . --profile=black --check
      - name: Lint with Black
        run: poetry run black . --check
      - name: Lint with Pylint
        run: poetry run pylint unmarkd --fail-under=5
